"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/use-scramble";
exports.ids = ["vendor-chunks/use-scramble"];
exports.modules = {

/***/ "(ssr)/./node_modules/use-scramble/dist/use-scramble.esm.js":
/*!************************************************************!*\
  !*** ./node_modules/use-scramble/dist/use-scramble.esm.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useScramble: () => (/* binding */ useScramble)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction getRandomChar(range) {\n  var rand = 0;\n  if (range.length === 2) {\n    rand = getRandomInt(range[0], range[1]);\n  } else {\n    rand = range[getRandomInt(0, range.length - 1)];\n  }\n  return String.fromCharCode(rand);\n}\nvar useScramble = function useScramble(props) {\n  var _props$playOnMount = props.playOnMount,\n    playOnMount = _props$playOnMount === void 0 ? true : _props$playOnMount,\n    _props$text = props.text,\n    text = _props$text === void 0 ? '' : _props$text,\n    _props$speed = props.speed,\n    speed = _props$speed === void 0 ? 1 : _props$speed,\n    _props$seed = props.seed,\n    seed = _props$seed === void 0 ? 1 : _props$seed,\n    _props$step = props.step,\n    step = _props$step === void 0 ? 1 : _props$step,\n    _props$tick = props.tick,\n    tick = _props$tick === void 0 ? 1 : _props$tick,\n    _props$scramble = props.scramble,\n    scramble = _props$scramble === void 0 ? 1 : _props$scramble,\n    _props$chance = props.chance,\n    chance = _props$chance === void 0 ? 1 : _props$chance,\n    _props$overflow = props.overflow,\n    overflow = _props$overflow === void 0 ? true : _props$overflow,\n    _props$range = props.range,\n    range = _props$range === void 0 ? [65, 125] : _props$range,\n    _props$overdrive = props.overdrive,\n    overdrive = _props$overdrive === void 0 ? true : _props$overdrive,\n    onAnimationStart = props.onAnimationStart,\n    onAnimationFrame = props.onAnimationFrame,\n    onAnimationEnd = props.onAnimationEnd,\n    _props$ignore = props.ignore,\n    ignore = _props$ignore === void 0 ? [' '] : _props$ignore;\n  var prefersReducedMotion = typeof window !== \"undefined\" ? window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches : false;\n  if (prefersReducedMotion) {\n    step = text.length;\n    chance = 0;\n    overdrive = false;\n  }\n  // text node ref\n  var nodeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  // animation frame request\n  var rafRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  // compute\n  var elapsedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  var fpsInterval = 1000 / (60 * speed);\n  // scramble step\n  var stepRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  // current character index ref\n  var scrambleIndexRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  // scramble controller\n  var controlRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n  // overdrive control index\n  var overdriveRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n  var setIfNotIgnored = function setIfNotIgnored(value, replace) {\n    return ignore.includes(\"\" + value) ? value : replace;\n  };\n  // pick random character ahead in the string, and add them to the randomizer\n  var seedForward = function seedForward() {\n    if (scrambleIndexRef.current === text.length) return;\n    for (var i = 0; i < seed; i++) {\n      var index = getRandomInt(scrambleIndexRef.current, controlRef.current.length);\n      if (typeof controlRef.current[index] !== 'number' && typeof controlRef.current[index] !== 'undefined') {\n        controlRef.current[index] = setIfNotIgnored(controlRef.current[index], getRandomInt(0, 10) >= (1 - chance) * 10 ? scramble || seed : 0);\n      }\n    }\n  };\n  // add `step` characters to the randomizer, and increase the scrambleIndexRef pointer\n  var stepForward = function stepForward() {\n    for (var i = 0; i < step; i++) {\n      if (scrambleIndexRef.current < text.length) {\n        var currentIndex = scrambleIndexRef.current;\n        var shouldScramble = getRandomInt(0, 10) >= (1 - chance) * 10;\n        controlRef.current[currentIndex] = setIfNotIgnored(text[scrambleIndexRef.current], shouldScramble ? scramble + getRandomInt(0, Math.ceil(scramble / 2)) : 0);\n        scrambleIndexRef.current++;\n      }\n    }\n  };\n  var resizeControl = function resizeControl() {\n    if (text.length < controlRef.current.length) {\n      controlRef.current.pop();\n      controlRef.current.splice(text.length, step);\n    }\n    for (var i = 0; i < step; i++) {\n      if (controlRef.current.length < text.length) {\n        controlRef.current.push(setIfNotIgnored(text[controlRef.current.length + 1], null));\n      }\n    }\n  };\n  var onOverdrive = function onOverdrive() {\n    if (!overdrive) return;\n    for (var i = 0; i < step; i++) {\n      var max = Math.max(controlRef.current.length, text.length);\n      if (overdriveRef.current < max) {\n        controlRef.current[overdriveRef.current] = setIfNotIgnored(text[overdriveRef.current], String.fromCharCode(typeof overdrive === 'boolean' ? 95 : overdrive));\n        overdriveRef.current++;\n      }\n    }\n  };\n  var onTick = function onTick() {\n    stepForward();\n    resizeControl();\n    seedForward();\n  };\n  /**\r\n   * Control the animation framerate, from the speed prop\r\n   *\r\n   * if speed is 0, stop the animation\r\n   */\n  var animate = function animate(time) {\n    if (!speed) return;\n    rafRef.current = requestAnimationFrame(animate);\n    onOverdrive();\n    var timeElapsed = time - elapsedRef.current;\n    if (timeElapsed > fpsInterval) {\n      elapsedRef.current = time;\n      if (stepRef.current % tick === 0) {\n        onTick();\n      }\n      draw();\n    }\n  };\n  /**\r\n   * Redraw text on every animation frame\r\n   */\n  var draw = function draw() {\n    if (!nodeRef.current) return;\n    var result = '';\n    for (var i = 0; i < controlRef.current.length; i++) {\n      var controlValue = controlRef.current[i];\n      switch (true) {\n        /**\r\n         * a positive integer value, get a random character\r\n         */\n        case typeof controlValue === 'number' && controlValue > 0:\n          result += getRandomChar(range);\n          if (i <= scrambleIndexRef.current) {\n            // reduce scramble index only if it's past the scrambleIndexRef\n            controlRef.current[i] = controlRef.current[i] - 1;\n          }\n          break;\n        /**\r\n         * a string from the previous text\r\n         */\n        case typeof controlValue === 'string' && (i >= text.length || i >= scrambleIndexRef.current):\n          result += controlValue;\n          break;\n        /**\r\n         * before scramble index, and equal to the string\r\n         */\n        case controlValue === text[i] && i < scrambleIndexRef.current:\n          result += text[i];\n          break;\n        /**\r\n         * scramble has finished\r\n         */\n        case controlValue === 0 && i < text.length:\n          result += text[i];\n          controlRef.current[i] = text[i];\n          break;\n        default:\n          result += '';\n      }\n    }\n    // set text\n    nodeRef.current.innerHTML = result;\n    onAnimationFrame && onAnimationFrame(result);\n    /**\r\n     * Exit if the result is equal to the input\r\n     *\r\n     * - Trim control to text length\r\n     * - fire onAnimationEnd\r\n     */\n    if (result === text) {\n      controlRef.current.splice(text.length, controlRef.current.length);\n      onAnimationEnd && onAnimationEnd();\n      cancelAnimationFrame(rafRef.current);\n    }\n    stepRef.current++;\n  };\n  /**\r\n   * Reset scramble controls\r\n   *\r\n   * if overflow is true, overflow the control to the an empty array, the size of the text input. This will cause the animation to play from an empty string\r\n   */\n  var reset = function reset() {\n    stepRef.current = 0;\n    scrambleIndexRef.current = 0;\n    overdriveRef.current = 0;\n    if (!overflow) {\n      controlRef.current = new Array(text == null ? void 0 : text.length);\n    }\n  };\n  /**\r\n   * Restarts the animation\r\n   *\r\n   * Cancels the current animation frame, resets the scramble index and other controls, and requests a new animation\r\n   */\n  var play = function play() {\n    cancelAnimationFrame(rafRef.current);\n    reset();\n    onAnimationStart && onAnimationStart();\n    rafRef.current = requestAnimationFrame(animate);\n  };\n  /**\r\n   * reset scramble when text input is changed\r\n   */\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    reset();\n  }, [text]);\n  /**\r\n   * start or stop animation when text and speed change\r\n   */\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    cancelAnimationFrame(rafRef.current);\n    rafRef.current = requestAnimationFrame(animate);\n    // cancel raf on unmount\n    return function () {\n      cancelAnimationFrame(rafRef.current);\n    };\n  }, [animate]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (!playOnMount) {\n      controlRef.current = text.split('');\n      stepRef.current = text.length;\n      scrambleIndexRef.current = text.length;\n      overdriveRef.current = text.length;\n      draw();\n      cancelAnimationFrame(rafRef.current);\n    }\n  }, []);\n  return {\n    ref: nodeRef,\n    replay: play\n  };\n};\n\n\n//# sourceMappingURL=use-scramble.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/use-scramble/dist/use-scramble.esm.js\n");

/***/ })

};
;